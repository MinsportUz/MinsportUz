# Generated by Django 3.1.1 on 2022-02-26 05:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutMinistry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('image', models.ImageField(null=True, upload_to='minstry')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'about_ministry',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_name', models.CharField(max_length=200)),
                ('key', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('id_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('email', models.CharField(blank=True, max_length=250, null=True)),
                ('message', models.TextField()),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='contact')),
                ('status', models.IntegerField(choices=[(0, 'in process'), (1, 'reviewed'), (2, 'rejected')], default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'contact',
                'ordering': ['status'],
            },
        ),
        migrations.CreateModel(
            name='ContactSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField()),
                ('address_uz', models.TextField(null=True)),
                ('address_en', models.TextField(null=True)),
                ('address_ru', models.TextField(null=True)),
                ('address_sr', models.TextField(null=True)),
                ('buses', models.CharField(blank=True, max_length=255, null=True)),
                ('mini_buses', models.CharField(blank=True, max_length=255, null=True)),
                ('bus_station', models.CharField(blank=True, max_length=255, null=True)),
                ('bus_station_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('bus_station_en', models.CharField(blank=True, max_length=255, null=True)),
                ('bus_station_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('bus_station_sr', models.CharField(blank=True, max_length=255, null=True)),
                ('metro_station', models.CharField(blank=True, max_length=255, null=True)),
                ('metro_station_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('metro_station_en', models.CharField(blank=True, max_length=255, null=True)),
                ('metro_station_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('metro_station_sr', models.CharField(blank=True, max_length=255, null=True)),
                ('working_days', models.TextField()),
                ('working_days_uz', models.TextField(null=True)),
                ('working_days_en', models.TextField(null=True)),
                ('working_days_ru', models.TextField(null=True)),
                ('working_days_sr', models.TextField(null=True)),
                ('working_hours', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('event_username', models.CharField(blank=True, max_length=200, null=True)),
                ('news_username', models.CharField(blank=True, max_length=200, null=True)),
                ('event_link', models.URLField(blank=True, null=True)),
                ('news_link', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('telegram', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('phone_number', models.CharField(max_length=50)),
                ('notice', models.TextField(null=True)),
                ('notice_uz', models.TextField(null=True)),
                ('notice_en', models.TextField(null=True)),
                ('notice_ru', models.TextField(null=True)),
                ('notice_sr', models.TextField(null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'contact_settings',
            },
        ),
        migrations.CreateModel(
            name='ContactStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.CharField(max_length=200, null=True)),
                ('review', models.CharField(max_length=200, null=True)),
                ('process', models.CharField(max_length=200, null=True)),
                ('reject', models.CharField(max_length=200, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'contact_stat',
            },
        ),
        migrations.CreateModel(
            name='ContactType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, null=True)),
                ('title_uz', models.CharField(max_length=300, null=True)),
                ('title_en', models.CharField(max_length=300, null=True)),
                ('title_ru', models.CharField(max_length=300, null=True)),
                ('title_sr', models.CharField(max_length=300, null=True)),
                ('order', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'contact_type',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('address', models.CharField(max_length=500)),
                ('address_uz', models.CharField(max_length=500, null=True)),
                ('address_en', models.CharField(max_length=500, null=True)),
                ('address_ru', models.CharField(max_length=500, null=True)),
                ('address_sr', models.CharField(max_length=500, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('link', models.CharField(max_length=200, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('long', models.CharField(blank=True, max_length=100, null=True)),
                ('lat', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('telegram', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'departments',
                'ordering': ['-region', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, null=True)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('link', models.CharField(max_length=500, null=True)),
                ('slug', models.SlugField(max_length=500, null=True, unique=True)),
                ('order', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'doctype',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'education',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'employment',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExternalImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='external')),
                ('url', models.URLField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'external_image',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('description', models.TextField()),
                ('description_uz', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_sr', models.TextField(null=True)),
                ('order', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'faq',
                'ordering': ['-order'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_name', models.CharField(max_length=200)),
                ('email', models.CharField(blank=True, max_length=250, null=True)),
                ('topic', models.TextField()),
                ('message', models.TextField()),
                ('status', models.IntegerField(choices=[(0, 'in process'), (1, 'reviewed'), (2, 'rejected')], default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'feedback',
            },
        ),
        migrations.CreateModel(
            name='MainPageSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo_title', models.CharField(max_length=255)),
                ('logo_title_uz', models.CharField(max_length=255, null=True)),
                ('logo_title_en', models.CharField(max_length=255, null=True)),
                ('logo_title_ru', models.CharField(max_length=255, null=True)),
                ('logo_title_sr', models.CharField(max_length=255, null=True)),
                ('e_link', models.URLField(blank=True)),
                ('phone_number', models.CharField(blank=True, max_length=128, null=True)),
                ('menu_icon', models.FileField(upload_to='icon')),
                ('menu_icon_link', models.CharField(max_length=255, null=True)),
                ('mobile_title', models.CharField(max_length=255)),
                ('mobile_title_uz', models.CharField(max_length=255, null=True)),
                ('mobile_title_en', models.CharField(max_length=255, null=True)),
                ('mobile_title_ru', models.CharField(max_length=255, null=True)),
                ('mobile_title_sr', models.CharField(max_length=255, null=True)),
                ('mobile_description', models.TextField()),
                ('mobile_description_uz', models.TextField(null=True)),
                ('mobile_description_en', models.TextField(null=True)),
                ('mobile_description_ru', models.TextField(null=True)),
                ('mobile_description_sr', models.TextField(null=True)),
                ('mobile_image', models.FileField(upload_to='settings')),
                ('mobile_poster', models.FileField(upload_to='settings')),
                ('mobile_android', models.URLField()),
                ('mobile_ios', models.URLField()),
                ('home_ad', models.FileField(upload_to='settings')),
                ('home_ad_android', models.URLField()),
                ('home_ad_ios', models.URLField()),
                ('poster', models.FileField(upload_to='poster')),
                ('poster_url', models.URLField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'main_page_settings',
            },
        ),
        migrations.CreateModel(
            name='MediaImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='uploads')),
                ('cover', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='uploads/cover/')),
            ],
        ),
        migrations.CreateModel(
            name='MinistryStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=350)),
                ('title_uz', models.CharField(max_length=350, null=True)),
                ('title_en', models.CharField(max_length=350, null=True)),
                ('title_ru', models.CharField(max_length=350, null=True)),
                ('title_sr', models.CharField(max_length=350, null=True)),
                ('colour', models.CharField(default='', max_length=500)),
                ('count', models.IntegerField(blank=True, default=0)),
                ('icon', models.FileField(upload_to='icon')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ministry_stat',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='MinistryStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=350)),
                ('title_uz', models.CharField(max_length=350, null=True)),
                ('title_en', models.CharField(max_length=350, null=True)),
                ('title_ru', models.CharField(max_length=350, null=True)),
                ('title_sr', models.CharField(max_length=350, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'ministry_structure',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_uz', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('description_sr', models.TextField(blank=True, null=True)),
                ('short_description', models.TextField(blank=True, null=True)),
                ('short_description_uz', models.TextField(blank=True, null=True)),
                ('short_description_en', models.TextField(blank=True, null=True)),
                ('short_description_ru', models.TextField(blank=True, null=True)),
                ('short_description_sr', models.TextField(blank=True, null=True)),
                ('thumbnail', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[300, 170], upload_to='news')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='news')),
                ('cover', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='news')),
                ('video_link', models.URLField(blank=True, null=True)),
                ('views', models.IntegerField(default=0)),
                ('main_page', models.BooleanField(default=False)),
                ('actual', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'news',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='NewsCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('order', models.IntegerField(default=0)),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'news_categories',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='NewsHashtag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'news_hashtags',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('address', models.CharField(max_length=500)),
                ('address_uz', models.CharField(max_length=500, null=True)),
                ('address_en', models.CharField(max_length=500, null=True)),
                ('address_ru', models.CharField(max_length=500, null=True)),
                ('address_sr', models.CharField(max_length=500, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('link', models.CharField(max_length=200, null=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, null=True, quality=81, size=[300, 300], upload_to='organization')),
                ('email', models.EmailField(max_length=254)),
                ('long', models.CharField(blank=True, max_length=100, null=True)),
                ('lat', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('telegram', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'organizations',
                'ordering': ['-region', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='PhotoGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('thumbnail', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[300, 170], upload_to='photo_gallery_thumbnails')),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'photo_gallery',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Press',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('link', models.URLField()),
                ('icon', models.FileField(upload_to='icon')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'press',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'question',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Quizz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('main_page', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'quizz',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(max_length=300, null=True, unique=True)),
                ('image', models.FileField(upload_to='region')),
                ('phone_number', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'regions',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='RegionalDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('phone_number', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'regional_department',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, null=True)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('icon', models.FileField(blank=True, null=True, upload_to='icon')),
                ('url', models.TextField(blank=True, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'service',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='SportType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('title_uz', models.CharField(max_length=250, null=True)),
                ('title_en', models.CharField(max_length=250, null=True)),
                ('title_ru', models.CharField(max_length=250, null=True)),
                ('title_sr', models.CharField(max_length=250, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'sport_type',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StaticPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('url', models.CharField(max_length=500, null=True)),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'static_pages',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=600)),
                ('title_uz', models.CharField(max_length=600, null=True)),
                ('title_en', models.CharField(max_length=600, null=True)),
                ('title_ru', models.CharField(max_length=600, null=True)),
                ('title_sr', models.CharField(max_length=600, null=True)),
                ('primary', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'tender_type',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Typo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('corrected', models.BooleanField(default=False)),
                ('page', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'typos',
                'ordering': ['corrected', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UsefulLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('icon', models.FileField(upload_to='icon')),
                ('description', models.TextField()),
                ('description_uz', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_sr', models.TextField(null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'useful_links',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='VideoGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('description', models.TextField()),
                ('description_uz', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_sr', models.TextField(null=True)),
                ('thumbnail', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[300, 170], upload_to='video_gallery_thumbnails')),
                ('video_link', models.URLField()),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'video_gallery',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='WeekDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_uz', models.CharField(max_length=100, null=True)),
                ('title_en', models.CharField(max_length=100, null=True)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_sr', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'week_day',
            },
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('about', models.TextField()),
                ('about_uz', models.TextField(null=True)),
                ('about_en', models.TextField(null=True)),
                ('about_ru', models.TextField(null=True)),
                ('about_sr', models.TextField(null=True)),
                ('tasks', models.TextField()),
                ('tasks_uz', models.TextField(null=True)),
                ('tasks_en', models.TextField(null=True)),
                ('tasks_ru', models.TextField(null=True)),
                ('tasks_sr', models.TextField(null=True)),
                ('count', models.IntegerField(default=1)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_published', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('education', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vacancy', to='admin_panel.education')),
                ('employment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vacancy', to='admin_panel.employment')),
            ],
            options={
                'db_table': 'vacancy',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Tender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('number', models.IntegerField(blank=True, default=0)),
                ('organizer', models.CharField(max_length=500)),
                ('organizer_uz', models.CharField(max_length=500, null=True)),
                ('organizer_en', models.CharField(max_length=500, null=True)),
                ('organizer_ru', models.CharField(max_length=500, null=True)),
                ('organizer_sr', models.CharField(max_length=500, null=True)),
                ('file', models.FileField(upload_to='tender')),
                ('is_published', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.region')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.type')),
            ],
            options={
                'db_table': 'tender',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=355)),
                ('title_uz', models.CharField(max_length=355, null=True)),
                ('title_en', models.CharField(max_length=355, null=True)),
                ('title_ru', models.CharField(max_length=355, null=True)),
                ('title_sr', models.CharField(max_length=355, null=True)),
                ('order', models.IntegerField(default=0)),
                ('position', models.CharField(max_length=500)),
                ('position_uz', models.CharField(max_length=500, null=True)),
                ('position_en', models.CharField(max_length=500, null=True)),
                ('position_ru', models.CharField(max_length=500, null=True)),
                ('position_sr', models.CharField(max_length=500, null=True)),
                ('inner_phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('reception_days', models.CharField(max_length=255)),
                ('reception_days_uz', models.CharField(max_length=255, null=True)),
                ('reception_days_en', models.CharField(max_length=255, null=True)),
                ('reception_days_ru', models.CharField(max_length=255, null=True)),
                ('reception_days_sr', models.CharField(max_length=255, null=True)),
                ('work_history', models.TextField()),
                ('work_history_uz', models.TextField(null=True)),
                ('work_history_en', models.TextField(null=True)),
                ('work_history_ru', models.TextField(null=True)),
                ('work_history_sr', models.TextField(null=True)),
                ('duty', models.TextField()),
                ('duty_uz', models.TextField(null=True)),
                ('duty_en', models.TextField(null=True)),
                ('duty_ru', models.TextField(null=True)),
                ('duty_sr', models.TextField(null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[300, 300], upload_to='staff')),
                ('instagram', models.URLField(blank=True, null=True)),
                ('telegram', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('main', models.BooleanField(default=False)),
                ('leader', models.BooleanField(default=False)),
                ('is_central', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='admin_panel.department')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='admin_panel.organization')),
            ],
            options={
                'db_table': 'staff',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Stadion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('title_uz', models.CharField(max_length=250, null=True)),
                ('title_en', models.CharField(max_length=250, null=True)),
                ('title_ru', models.CharField(max_length=250, null=True)),
                ('title_sr', models.CharField(max_length=250, null=True)),
                ('description', models.TextField(blank=True)),
                ('description_uz', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('description_sr', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('address_uz', models.TextField(blank=True, null=True)),
                ('address_en', models.TextField(blank=True, null=True)),
                ('address_ru', models.TextField(blank=True, null=True)),
                ('address_sr', models.TextField(blank=True, null=True)),
                ('host_team', models.CharField(blank=True, max_length=350, null=True)),
                ('host_team_uz', models.CharField(blank=True, max_length=350, null=True)),
                ('host_team_en', models.CharField(blank=True, max_length=350, null=True)),
                ('host_team_ru', models.CharField(blank=True, max_length=350, null=True)),
                ('host_team_sr', models.CharField(blank=True, max_length=350, null=True)),
                ('established', models.CharField(blank=True, max_length=350)),
                ('established_uz', models.CharField(blank=True, max_length=350, null=True)),
                ('established_en', models.CharField(blank=True, max_length=350, null=True)),
                ('established_ru', models.CharField(blank=True, max_length=350, null=True)),
                ('established_sr', models.CharField(blank=True, max_length=350, null=True)),
                ('capacity', models.IntegerField(blank=True, default=0, null=True)),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, quality=81, size=[300, 170], upload_to='stadion')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.region')),
            ],
            options={
                'db_table': 'stadion',
                'ordering': ['region', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reception',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(max_length=500)),
                ('active', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.weekday')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.staff')),
            ],
            options={
                'db_table': 'reception',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='QuestionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='admin_panel.question')),
                ('quizz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='admin_panel.quizz')),
            ],
            options={
                'db_table': 'question_result',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quizz',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question', to='admin_panel.quizz'),
        ),
        migrations.CreateModel(
            name='PressArticleLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('language', models.CharField(max_length=200)),
                ('link', models.URLField()),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('press', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article', to='admin_panel.press')),
            ],
            options={
                'db_table': 'press_article_link',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='PhotoGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='photo_gallery')),
                ('photo_gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='admin_panel.photogallery')),
            ],
            options={
                'db_table': 'photo_gallery_images',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.region'),
        ),
        migrations.CreateModel(
            name='NewsSMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.BooleanField(default=False)),
                ('telegram', models.BooleanField(default=False)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smedia', to='admin_panel.news')),
            ],
            options={
                'db_table': 'news_smedia',
            },
        ),
        migrations.AddField(
            model_name='news',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news', to='admin_panel.newscategory'),
        ),
        migrations.AddField(
            model_name='news',
            name='hashtag',
            field=models.ManyToManyField(blank=True, related_name='news', to='admin_panel.NewsHashtag'),
        ),
        migrations.AddField(
            model_name='news',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='news', to='admin_panel.region'),
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('title_uz', models.CharField(max_length=300, null=True)),
                ('title_en', models.CharField(max_length=300, null=True)),
                ('title_ru', models.CharField(max_length=300, null=True)),
                ('title_sr', models.CharField(max_length=300, null=True)),
                ('url', models.CharField(max_length=500, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('sub_order', models.IntegerField(blank=True, null=True)),
                ('is_static', models.BooleanField(blank=True, default=False)),
                ('footer', models.BooleanField(blank=True, default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='admin_panel.menu')),
            ],
            options={
                'db_table': 'menus',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('description', models.TextField()),
                ('description_uz', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_sr', models.TextField(null=True)),
                ('address', models.TextField()),
                ('address_uz', models.TextField(null=True)),
                ('address_en', models.TextField(null=True)),
                ('address_ru', models.TextField(null=True)),
                ('address_sr', models.TextField(null=True)),
                ('event_place', models.TextField()),
                ('event_place_uz', models.TextField(null=True)),
                ('event_place_en', models.TextField(null=True)),
                ('event_place_ru', models.TextField(null=True)),
                ('event_place_sr', models.TextField(null=True)),
                ('link', models.URLField(null=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='event')),
                ('event_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hashtag', models.ManyToManyField(blank=True, related_name='event', to='admin_panel.NewsHashtag')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event', to='admin_panel.region')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event', to='admin_panel.sporttype')),
            ],
            options={
                'db_table': 'events',
                'ordering': ['-event_date'],
            },
        ),
        migrations.CreateModel(
            name='Docs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('issued_by', models.CharField(max_length=500)),
                ('issued_by_uz', models.CharField(max_length=500, null=True)),
                ('issued_by_en', models.CharField(max_length=500, null=True)),
                ('issued_by_ru', models.CharField(max_length=500, null=True)),
                ('issued_by_sr', models.CharField(max_length=500, null=True)),
                ('file', models.FileField(null=True, upload_to='file')),
                ('law', models.CharField(max_length=500)),
                ('law_uz', models.CharField(max_length=500, null=True)),
                ('law_en', models.CharField(max_length=500, null=True)),
                ('law_ru', models.CharField(max_length=500, null=True)),
                ('law_sr', models.CharField(max_length=500, null=True)),
                ('url', models.URLField(null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_published', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doc_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='docs', to='admin_panel.doctype')),
            ],
            options={
                'db_table': 'docs',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.region')),
            ],
            options={
                'db_table': 'districts',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.region'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=128, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='user')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.region')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, null=True)),
                ('title_uz', models.CharField(max_length=250, null=True)),
                ('title_en', models.CharField(max_length=250, null=True)),
                ('title_ru', models.CharField(max_length=250, null=True)),
                ('title_sr', models.CharField(max_length=250, null=True)),
                ('competition', models.TextField()),
                ('competition_uz', models.TextField(null=True)),
                ('competition_en', models.TextField(null=True)),
                ('competition_ru', models.TextField(null=True)),
                ('competition_sr', models.TextField(null=True)),
                ('description', models.TextField()),
                ('description_uz', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_sr', models.TextField(null=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[120, 120], upload_to='champion')),
                ('medal', models.CharField(max_length=500)),
                ('medal_uz', models.CharField(max_length=500, null=True)),
                ('medal_en', models.CharField(max_length=500, null=True)),
                ('medal_ru', models.CharField(max_length=500, null=True)),
                ('medal_sr', models.CharField(max_length=500, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.sporttype')),
            ],
            options={
                'db_table': 'champion',
                'ordering': ['-created_at'],
            },
        ),
    ]
